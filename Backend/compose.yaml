services:
    todo-task-postgres:
        image: postgres:15
        container_name: todotask-postgres
        environment:
            POSTGRES_DB: TodoTaskDb
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: strongpassword
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 10
    
    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
        ports:
            - 9200:9200
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        environment:
            - xpack.security.enabled=false
            - discovery.type=single-node
            - ES_JAVA_OPTS=-Xms512m -Xmx512m
        restart: always
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
            interval: 10s
            timeout: 5s
            retries: 30
    
    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:8.16.1
        ports:
            - "5601:5601"
        depends_on:
            elasticsearch:
                condition: service_healthy
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
            - xpack.security.enabled=false
            - ELASTICSEARCH_REQUEST_TIMEOUT=90000
            - ELASTICSEARCH_STARTUP_TIMEOUT=300000
        restart: always

volumes:
    elasticsearch-data:
    pgdata:
            
#    keycloak: к сожалению я не успею написать отдельный микрик :)
#        image: quay.io/keycloak/keycloak:latest
#        container_name: Keycloak
#        command: start-dev
#        environment:
#            - KC_HEALTH_ENABLED=true
#            - KEYCLOAK_ADMIN=admin
#            - KEYCLOAK_ADMIN_PASSWORD=admin
#        volumes:
#            - ./.containers/identity:/opt/keycloak/data
#        ports:
#            - 18080:8080
            

